import os
import requests
import telebot
from flask import Flask
import tempfile
import re

app = Flask(__name__)
API_TOKEN = os.environ['TELEGRAM_TOKEN'].strip()
bot = telebot.TeleBot(API_TOKEN)

@app.route('/')
def home():
    return "TikTok Downloader Bot is running!"

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –∏–∑ TikTok, –∏ —è —Å–∫–∞—á–∞—é –µ–≥–æ –±–µ–∑ –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞.")

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    url = message.text
    if 'tiktok.com' in url:
        try:
            processing_msg = bot.reply_to(message, "‚è≥ –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ...")
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–±–æ—á–∏–π API
            video_url = get_video_from_api(url)
            
            if video_url:
                # –°–∫–∞—á–∏–≤–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
                success = download_and_send_video(video_url, message.chat.id)
                bot.delete_message(processing_msg.chat.id, processing_msg.message_id)
                if not success:
                    bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ")
            else:
                bot.delete_message(processing_msg.chat.id, processing_msg.message_id)
                bot.reply_to(message, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∏–¥–µ–æ")
                
        except Exception as e:
            bot.reply_to(message, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")
    else:
        bot.reply_to(message, "üìõ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É TikTok")

def get_video_from_api(tiktok_url):
    """–ü–æ–ª—É—á–∞–µ–º —Ä–∞–±–æ—á—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ API"""
    try:
        # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–±–æ—á–∏—Ö API
        apis = [
            f"https://api16-normal-c-useast1a.tiktokv.com/aweme/v1/feed/?aweme_id={extract_aweme_id(tiktok_url)}",
            f"https://api.tikwm.com/api/?url={tiktok_url}",
            f"https://www.tiktokdownloadr.com/api?url={tiktok_url}"
        ]
        
        for api_url in apis:
            try:
                response = requests.get(api_url, timeout=10, headers={
                    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
                })
                
                if response.status_code == 200:
                    data = response.json()
                    
                    # –ü–∞—Ä—Å–∏–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
                    video_url = (
                        data.get('aweme_list', [{}])[0].get('video', {}).get('play_addr', {}).get('url_list', [''])[0]
                        or data.get('data', {}).get('play')
                        or data.get('video_url')
                    )
                    
                    if video_url and video_url.startswith('http'):
                        return video_url
                        
            except:
                continue
                
    except Exception as e:
        print(f"API error: {e}")
    
    return None

def extract_aweme_id(url):
    """–ò–∑–≤–ª–µ–∫–∞–µ–º aweme_id –∏–∑ —Å—Å—ã–ª–∫–∏"""
    try:
        # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã —Å—Å—ã–ª–æ–∫
        patterns = [
            r'/video/(\d+)',
            r'%2Fvideo%2F(\d+)',
            r'(\d{19})'
        ]
        
        for pattern in patterns:
            match = re.search(pattern, url)
            if match:
                return match.group(1)
    except:
        pass
    return ""

def download_and_send_video(video_url, chat_id):
    """–°–∫–∞—á–∏–≤–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ"""
    try:
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
            'Referer': 'https://www.tiktok.com/'
        }
        
        # –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ
        response = requests.get(video_url, headers=headers, timeout=30, stream=True)
        
        if response.status_code == 200:
            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            with tempfile.NamedTemporaryFile(delete=False, suffix='.mp4') as tmp_file:
                for chunk in response.iter_content(chunk_size=8192):
                    if chunk:
                        tmp_file.write(chunk)
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
with open(tmp_file.name, 'rb') as video_file:
                    bot.send_video(chat_id, video_file, caption="‚úÖ –í–æ—Ç –≤–∞—à–µ –≤–∏–¥–µ–æ –±–µ–∑ –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞!")
                
                # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                os.unlink(tmp_file.name)
                return True
                
    except Exception as e:
        print(f"Download error: {e}")
    
    return False

def run_bot():
    bot.polling(none_stop=True)

if name == '__main__':
    import threading
    threading.Thread(target=run_bot).start()
    app.run(host='0.0.0.0', port=int(os.environ.get('PORT', 5000)))
