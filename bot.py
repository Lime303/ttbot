import os
import requests
import telebot
from flask import Flask
import tempfile
import re

app = Flask(__name__)
API_TOKEN = os.environ['TELEGRAM_TOKEN'].strip()
bot = telebot.TeleBot(API_TOKEN)

@app.route('/')
def home():
    return "TikTok Downloader Bot is running!"

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –∏–∑ TikTok, –∏ —è —Å–∫–∞—á–∞—é –µ–≥–æ –±–µ–∑ –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞.")

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    url = message.text
    if 'tiktok.com' in url:
        try:
            processing_msg = bot.reply_to(message, "‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Å—Å—ã–ª–∫—É...")

            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—É—é —Å—Å—ã–ª–∫—É –∏–∑ –∫–æ—Ä–æ—Ç–∫–æ–π
            full_url = get_full_tiktok_url(url)
            if not full_url:
                bot.delete_message(processing_msg.chat.id, processing_msg.message_id)
                bot.reply_to(message, "‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞ TikTok")
                return

            # –ü–æ–ª—É—á–∞–µ–º –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ API
            video_data = get_video_from_api(full_url)

            if video_data and 'video_url' in video_data:
                # –°–∫–∞—á–∏–≤–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
                success = download_and_send_video(
                    video_data['video_url'],
                    message.chat.id,
                    video_data.get('caption', '–í–æ—Ç –≤–∞—à–µ –≤–∏–¥–µ–æ –±–µ–∑ –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞! ‚úÖ')
                )
                bot.delete_message(processing_msg.chat.id, processing_msg.message_id)
                if not success:
                    bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ")
            else:
                bot.delete_message(processing_msg.chat.id, processing_msg.message_id)
                bot.reply_to(message, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ")

        except Exception as e:
            bot.reply_to(message, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")
    else:
        bot.reply_to(message, "üìõ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É TikTok")

def get_full_tiktok_url(short_url):
    """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–æ—Ä–æ—Ç–∫—É—é —Å—Å—ã–ª–∫—É –≤ –ø–æ–ª–Ω—É—é"""
    try:
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
        }

        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω–µ—á–Ω—ã–π URL –ø–æ—Å–ª–µ –≤—Å–µ—Ö —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤
        response = requests.get(short_url, headers=headers, timeout=10, allow_redirects=True)
        return response.url

    except:
        return None

def get_video_from_api(tiktok_url):
    """–ü–æ–ª—É—á–∞–µ–º –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ TikTok API"""
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º API –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ø—Ä—è–º—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏
        api_url = f"https://api.tikwm.com/api/?url={tiktok_url}"

        response = requests.get(api_url, timeout=15, headers={
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
            'Accept': 'application/json'
        })

        if response.status_code == 200:
            data = response.json()
            if data.get('code') == 0:
                return {
                    'video_url': data['data']['play'],
                    'caption': data['data'].get('title', '–í–æ—Ç –≤–∞—à–µ –≤–∏–¥–µ–æ –±–µ–∑ –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞! ‚úÖ')
                }

        # Fallback: –ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–æ–π API
        api_url2 = f"https://www.tiktokdownloadr.com/api?url={tiktok_url}"
        response2 = requests.get(api_url2, timeout=10)
        if response2.status_code == 200:
            data = response2.json()
            if data.get('success'):
                return {
                    'video_url': data['video_url'],
                    'caption': '–í–æ—Ç –≤–∞—à–µ –≤–∏–¥–µ–æ –±–µ–∑ –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞! ‚úÖ'
                }

    except Exception as e:
        print(f"API error: {e}")

    return None

def download_and_send_video(video_url, chat_id, caption):
    """–°–∫–∞—á–∏–≤–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ"""
    try:
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
            'Referer': 'https://www.tiktok.com/'
        }

        # –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ
        response = requests.get(video_url, headers=headers, timeout=30, stream=True)

        if response.status_code == 200:
            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            with tempfile.NamedTemporaryFile(delete=False, suffix='.mp4') as tmp_file:
                for chunk in response.iter_content(chunk_size=8192):
                    if chunk:
                        tmp_file.write(chunk)

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –ø—É—Å—Ç–æ–π
                if os.path.getsize(tmp_file.name) > 0:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
                    with open(tmp_file.name, 'rb') as video_file:
                        bot.send_video(chat_id, video_file, caption=caption)

                    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                    os.unlink(tmp_file.name)
                    return True
                else:
                    print("–°–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –ø—É—Å—Ç–æ–π")
                    return False

    except Exception as e:
        print(f"Download error: {e}")

    return False

def run_bot():
    bot.polling(none_stop=True)

if __name__ == '__main__':
    import threading
    threading.Thread(target=run_bot).start()
    app.run(host='0.0.0.0', port=int(os.environ.get('PORT', 5000)))
	
