import os
import requests
import re
import json
import telebot
from flask import Flask
from urllib.parse import quote

app = Flask(__name__)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Render
API_TOKEN = os.environ['TELEGRAM_TOKEN']
bot = telebot.TeleBot(API_TOKEN)

@app.route('/')
def home():
    return "TikTok Bot is running!"

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –∏–∑ TikTok, –∏ —è —Å–∫–∞—á–∞—é –µ–≥–æ –±–µ–∑ –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞.")

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    url = message.text
    if 'tiktok.com' in url:
        try:
            processing_msg = bot.reply_to(message, "‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∏–¥–µ–æ...")
            video_url = download_tiktok_simple(url)
            
            if video_url:
                bot.delete_message(processing_msg.chat.id, processing_msg.message_id)
                bot.send_video(message.chat.id, video_url, caption="‚úÖ –í–æ—Ç –≤–∞—à–µ –≤–∏–¥–µ–æ! üé¨")
            else:
                bot.delete_message(processing_msg.chat.id, processing_msg.message_id)
                bot.reply_to(message, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É.")
                
        except Exception as e:
            bot.reply_to(message, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")
    else:
        bot.reply_to(message, "üìõ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ TikTok.")

def download_tiktok_simple(tiktok_url):
    """–ü—Ä–æ—Å—Ç–æ–π –º–µ—Ç–æ–¥ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ –º–æ–±–∏–ª—å–Ω—ã–π User-Agent"""
    try:
        headers = {
            'User-Agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 15_0 like Mac OS X) AppleWebKit/605.1.15',
            'Accept': 'video/mp4,video/*;q=0.9',
            'Referer': 'https://www.tiktok.com/',
            'Origin': 'https://www.tiktok.com'
        }
        
        response = requests.get(tiktok_url, headers=headers, timeout=15, allow_redirects=True)
        
        if 'video/mp4' in response.headers.get('content-type', ''):
            return response.url
        
        html = response.text
        patterns = [
            r'"downloadAddr":"([^"]+)"',
            r'"playAddr":"([^"]+)"', 
            r'<meta property="og:video" content="([^"]+)"',
            r'src="(https://[^"]+\.mp4)"'
        ]
        
        for pattern in patterns:
            match = re.search(pattern, html)
            if match:
                video_url = match.group(1).replace('\\u002F', '/')
                if video_url.startswith('http'):
                    return video_url
                
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {e}")
    
    return None

def run_bot():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    bot.polling(none_stop=True)

if name == '__main__':
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    import threading
    threading.Thread(target=run_bot).start()
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask —Å–µ—Ä–≤–µ—Ä
    app.run(host='0.0.0.0', port=int(os.environ.get('PORT', 5000)))
